#!/bin/bash

export CONSOLE=console.txt

write_input_files() 
{
    cat /dev/stdin | tar --extract              >> $CONSOLE 2>&1 

    if [ -f report_config.json ] ; then
        export SCRIPT_NAME=$(jq < report_config.json -r .scriptName) 	>> $CONSOLE 2>&1
    fi
    if [ -z $SCRIPT NAME ] ; then
        export SCRIPT_NAME=report.ipynb
    fi
}


nbconvert()
{
    if [ -z $SCRIPT_NAME ] ; then
        echo SCRIPT_NAME variable is empty!
        return 1
    fi
    if [ ! -f $SCRIPT_NAME ] ; then
        echo Script file not found : $SCRIPT_NAME >> $CONSOLE
        return 1
    fi

    echo \$ python3 -m nbconvert -y --clear-output "$SCRIPT_NAME"                      >> $CONSOLE 2>&1
    python3 -m nbconvert -y --clear-output "$SCRIPT_NAME"                             >> $CONSOLE 2>&1
    echo \$ python3 -m nbconvert -y --execute --allow-errors --inplace "$SCRIPT_NAME"  >> $CONSOLE 2>&1
    python3 -m nbconvert -y --execute --allow-errors --inplace "$SCRIPT_NAME"         >> $CONSOLE 2>&1

    if [ $? -eq 0 ] && [ -f $SCRIPT_NAME ] ; then
        return 0
    fi
    return 1
}


write_output_files()
{
    tar --create --to-stdout * | cat
}


export SCRIPT_NAME=
export TMP=$(mktemp -d)              >> $CONSOLE 2>&1 
cd $TMP                              >> $CONSOLE 2>&1 
date > $CONSOLE

write_input_files

nbconvert

EXIT_CODE=$?

date >> $CONSOLE
write_output_files

cd /                                >> /dev/null
# rm -r $TMP                          >> /dev/null
exit $EXIT_CODE
